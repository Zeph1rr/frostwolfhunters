name: Build project

on:
  release:
    types: [published]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          # - StandaloneWindows
          # - StandaloneLinux64
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Set build name
        id: set_build_name
        run: |
          # Извлечение имени репозитория
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          
          # Извлечение версии из тега
          VERSION=${GITHUB_REF##*/}
          
          # Создание имени билда
          BUILD_NAME="${REPO_NAME}-${{ matrix.targetPlatform }}-${VERSION}"
          
          # Сохранение в переменной окружения
          echo "BUILD_NAME=${BUILD_NAME}" >> $GITHUB_ENV
          echo "MY_APP_VERSION=${VERSION}" >> $GITHUB_ENV
          
          # Выводим имя билда для проверки
          echo "Build name is: $BUILD_NAME"

      - name: Remove do_not_ship folder
        run: rm -rf *DoNotShip

      - name: Upload build folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Create zip archive from build folder
        run: |
          zip -r ${{ env.BUILD_NAME }}.zip build/${{ matrix.targetPlatform }}

      - name: Upload zip archive to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.BUILD_NAME }}.zip  # Указываем путь к zip архиву
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Используем стандартный GITHUB_TOKEN для работы с GitHub API



  createWindowsInstaller:
    name: Compile Installer on Windows
    runs-on: windows-latest
    needs: buildForAllSupportedPlatforms
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          # - StandaloneWindows
    steps:
      - uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-${{ matrix.targetPlatform }}  # Имя артефакта для Windows
          path: build/${{ matrix.targetPlatform }}

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@main
        with:
          path: frostwolf.iss
          options: |
            /O+
            /DMyAppVersion="${{ github.ref_name }}"
            /DMySourcePath="${{ github.action_path }}"
            /DMyBuildPath="${{ github.action_path }}\build\${{ matrix.targetPlatform }}"
            /DMyOutputDir="${{ github.action_path }}\setup\${{ matrix.targetPlatform }}"
            /DMyPassword="1"
            /DMyAppPlatform="${{ matrix.targetPlatform }}"


      - name: Upload installer as artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: setup/${{ matrix.targetPlatform }}/frostwolfhunters-setup-${{ matrix.targetPlatform }}-${{ github.ref_name }}.exe

  uploadWindowsInstallerToRelease:
    name: Upload Windows Installer to Release
    runs-on: ubuntu-latest
    needs: createWindowsInstaller
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
         # - StandaloneWindows
    steps:
      - name: Download installer artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-installer

      - name: Upload installer to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: setup/${{ matrix.targetPlatform }}/frostwolfhunters-setup-${{ matrix.targetPlatform }}-${{ github.ref_name }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


        